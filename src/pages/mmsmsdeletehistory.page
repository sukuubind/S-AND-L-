<apex:page controller="MMSMSDeleteHistoryController" action="{!autoRun}" contentType="text/html" >
    <apex:includeScript value="{!$Resource.jquery}" />
    <apex:includeScript value="{!$Resource.JQueryUI}" />
    <apex:stylesheet value="{!URLFOR($Resource.JQueryUICSS, 'css/smoothness/jquery-ui-1.8.16.custom.css')}"/>
    <script>
        var jq = jQuery.noConflict();
        var startDate = null;
        var endDate = null;
        var btnCancel = null;
        var btnDelete = null;
        var isTaskText = null;
        var isReceiptText = null;
        var isSMSLogText = null;
        var task = 1;
        jq(document).ready(function() {
            initControls();
            getStatusTextIds();
            btnDelete.attr('disabled',true);
            setBatchExecute(task, startDate.val(), endDate.val());
        });
        var initControls = function() {
            btnCancel = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.pbButtons.btnCancel}'));
            btnDelete = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.pbButtons.btnDelete}'));
            startDate = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.DeleteCriteriaSection.StartDateItem.startDate}'));
            endDate = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.DeleteCriteriaSection.EndDateItem.endDate}'));
            startDate.datepicker({ dateFormat: 'mm/dd/yy', showOn: "button"});
            endDate.datepicker({ dateFormat: 'mm/dd/yy', showOn: "button" });
            startDate.bind('change',function() {
                task = 1;
                resetStatusTextIds();
                btnDelete.attr('disabled',true);
                setBatchExecute(task, startDate.val(), endDate.val());
            });
            endDate.bind('change',function() {
                task = 1;
                resetStatusTextIds();
                btnDelete.attr('disabled',true);
                setBatchExecute(task, startDate.val(), endDate.val());
            });
        };
        var deleteHistoryClick = function() {
            if (confirm('Selected record would be delete. Are you sure[Y/N]?')) {
                task=1;
                resetStatusTextIds();
                btnDelete.attr('disabled',true);
                setDeleteExecute(task, startDate.val(), endDate.val());
            }
            return false;
        };
        var resetStatusTextIds = function() {
            isTaskText.val('');
            isReceiptText.val('');
            isSMSLogText.val('');
        };
        var getStatusTextIds = function() {
            isTaskText = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.DeleteObjectSection.TaskItem.isTaskText}'));
            isReceiptText = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.DeleteObjectSection.ReceiptItem.isReceiptText}'));
            isSMSLogText = jq('#' + getStrippedComponentId('{!$Component.mainForm.mainPB.DeleteObjectSection.SMSLogItem.isSMSLogText}'));
        }
        var getStrippedComponentId = function(id){
            return id.replace(/:/g,'\\:');
        };
        var batchExecuteComplete = function() {
            getBatchStatus(task);

        };
        var batchDeleteComplete = function() {
            getBatchDeleteStatus(task);
        };
        var batchStatusComplete = function() {
            getStatusTextIds();
            if (task == 1) {
                if (isTaskText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setBatchExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchStatus(task);
                }
            }
            else if (task == 2) {
                if (isReceiptText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setBatchExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchStatus(task);
                }
            }
            else if (task == 3) {
                if (isSMSLogText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setBatchExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchStatus(task);
                }            
            }
            else {
                btnDelete.attr('disabled',false);
            }
        };
        var batchDeleteStatusComplete = function() {
            getStatusTextIds();
            if (task == 1) {
                if (isTaskText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setDeleteExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchDeleteStatus(task);
                }
            }
            else if (task == 2) {
                if (isReceiptText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setDeleteExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchDeleteStatus(task);
                }
            }
            else if (task == 3) {
                if (isSMSLogText.val().toLowerCase().indexOf('completed') >= 0) {
                    task++;
                    setDeleteExecute(task, startDate.val(), endDate.val());
                }
                else {
                    getBatchDeleteStatus(task);
                }            
            }
            else {
                btnDelete.attr('disabled',false);
            }
        };
    </script>
    <apex:form id="mainForm">
        <apex:actionFunction action="{!batchStatus}" name="getBatchStatus" reRender="isTaskText,isReceiptText,isSMSLogText" oncomplete="batchStatusComplete()">
            <apex:param name="qry" value="" />
        </apex:actionFunction>
        <apex:actionFunction action="{!batchExecute}" name="setBatchExecute" reRender="isTaskText,isReceiptText,isSMSLogText" oncomplete="batchExecuteComplete()">
            <apex:param name="qry" value="" />
            <apex:param name="sdt" value="" />
            <apex:param name="edt" value="" />
        </apex:actionFunction>
        <apex:actionFunction action="{!deleteHistory}" name="setDeleteExecute" reRender="isTaskText,isReceiptText,isSMSLogText" oncomplete="batchDeleteComplete()">
            <apex:param name="qry" value="" />
            <apex:param name="sdt" value="" />
            <apex:param name="edt" value="" />
        </apex:actionFunction>
        <apex:actionFunction action="{!batchStatus}" name="getBatchDeleteStatus" reRender="isTaskText,isReceiptText,isSMSLogText" oncomplete="batchDeleteStatusComplete()">
            <apex:param name="qry" value="" />
        </apex:actionFunction>
        <apex:pageBlock title="MMSMS Delete History" id="mainPB">
            <apex:pageMessages showDetail="false" escape="true"/>
            <apex:pageBlockButtons id="pbButtons">
                    <apex:commandButton id="btnDelete" value="Delete History" onclick="return deleteHistoryClick();" /> 
                    <apex:commandButton id="btnCancel" value="Cancel" action="{!cancel}"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection collapsible="false" id="DeleteCriteriaSection" title="Delete Criteria" columns="1">
                <apex:pageBlockSectionItem id="StartDateItem">
                    <apex:outputLabel value="Start Date" for="startDate"></apex:outputLabel>    
                    <apex:outputPanel styleClass="requiredInput" layout="block">
                        <apex:inputText id="startDate" value="{!startDate}" />
                    </apex:outputPanel>            
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="EndDateItem">
                    <apex:outputLabel value="End Date" for="endDate"></apex:outputLabel>    
                    <apex:outputPanel styleClass="requiredInput" layout="block">
                        <apex:inputText id="endDate" value="{!endDate}" />
                    </apex:outputPanel>            
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection collapsible="false" id="DeleteObjectSection" title="Delete Object" columns="1">
                <apex:pageBlockSectionItem id="TaskItem">
                    <apex:outputLabel value="Task" for="isTask"></apex:outputLabel>    
                    <apex:outputPanel styleClass="requiredInput" layout="block">
                        <apex:inputcheckbox id="isTask" value="{!isTask}" style="margin-right:20px;" disabled="true" />
                        <apex:inputText id="isTaskText" value="{!isTaskText}" disabled="true" style="border-width:0px;" />
                    </apex:outputPanel>            
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="ReceiptItem">
                    <apex:outputLabel value="Receipt" for="isReceipt"></apex:outputLabel>    
                    <apex:outputPanel styleClass="requiredInput" layout="block">
                        <apex:inputcheckbox id="isReceipt" value="{!isReceipt}" style="margin-right:20px;" disabled="true" />
                        <apex:inputText id="isReceiptText" value="{!isReceiptText}" disabled="true" style="border-width:0px;"/>                        
                    </apex:outputPanel>            
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="SMSLogItem">
                    <apex:outputLabel value="SMS Log" for="isSMSLog"></apex:outputLabel>    
                    <apex:outputPanel styleClass="requiredInput" layout="block">
                        <apex:inputcheckbox id="isSMSLog" value="{!isSMSLog}" style="margin-right:20px;" disabled="true" />
                        <apex:inputText id="isSMSLogText" value="{!isSMSLogText}" disabled="true" style="border-width:0px;"/>                        
                    </apex:outputPanel>            
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:Form>
</apex:page>